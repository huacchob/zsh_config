#! bin/zsh

# Aliases
# Navigation
alias windows="cd /mnt/c/Users/huacc/Downloads"

# Updates
alias update="brew update && brew doctor && brew upgrade && brew upgrade --cask && brew cleanup -s && brew doctor"
alias update-tools="curl -fsSL https://ollama.com/install.sh | sh && curl -sSL https://install.python-poetry.org | python3 -"

# Commands
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -iv'
alias mkdir='mkdir -p'
alias ps='ps auxf'
alias ping='ping -c 10'
alias less='less -R'
alias grep="grep --color=auto"
alias vi="nvim"
alias vim="nvim"
alias editor="nvim"
alias cat="bat --color=always --theme=Dracula --style=full --paging=always"

# Search command line history
alias h="history | grep "

# Search running processes
alias p="ps aux | grep "
alias topcpu="/bin/ps -eo pcpu,pid,user,args | sort -k 1 -r | head -10"

# Search files in the current folder
alias f="find . | grep "
alias tree="tree -AC --filesfirst"
alias atree="tree -AC --filesfirst -a"

# Tmux
alias tmux="tmux -f ~/.config/tmux/tmux.conf"
tmuxc() {
    if [ -z "$1" ]; then
        echo "❗ Usage: tmuxc <session-name>"
        return 1
    fi

    if [ -n "$TMUX" ]; then
        # Inside tmux — switch client to the new session
        tmux new-session -d -s "$1" 2>/dev/null
        tmux switch-client -t "$1"
    else
        # Outside tmux — create or attach
        tmux new-session -As "$1"
    fi
}

alias tmuxk="tmux kill-session -t"
alias tmuxs="tmux switch -t"
alias tmuxsu='tmux split-window -v -c "#{pane_current_path}"; tmux select-pane -U'
alias tmuxsd='tmux split-window -v -c "#{pane_current_path}"; tmux select-pane -D'
alias tmuxsl='tmux split-window -h -c "#{pane_current_path}"; tmux select-pane -L'
alias tmuxsr='tmux split-window -h -c "#{pane_current_path}"; tmux select-pane -R'

# tldr
alias man="tldr"
alias tldr="tldr"

# eza
alias ls="eza -alh"

# zoxide
zam() {
    local dir="$1"
    if [ -d "$dir" ]; then
        zoxide add "$dir" && cd "$dir"
    else
        echo "Directory not found: $dir"
    fi
}

# Docker
alias docker="sudo docker"
dshell() { docker exec -it "$1" bash; }
dckill() {
    local cname="$1"

    if [ -z "$cname" ]; then
        return 1
    fi

    docker stop "$cname"

    docker rm "$cname"
}
alias dlog="docker logs -f"
alias dps="docker ps -a --format 'table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Ports}}'"

# IP Aliases
alias localip="ip a | grep -E 'inet .* scope global eth0'"
